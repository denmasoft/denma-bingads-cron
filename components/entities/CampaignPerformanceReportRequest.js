module.exports = (sequelize, DataTypes) => {
    const CampaignPerformanceReportRequest = sequelize.define('CampaignPerformance', {
        Campaign_Id: {
            type: DataTypes.INTEGER,
            autoIncrement: true,
            primaryKey: true
        },
        CampaignId: {type: DataTypes.INTEGER},
        AccountId : {type: DataTypes.INTEGER},
        AccountName : {type: DataTypes.STRING},
        AccountNumber : {type: DataTypes.STRING},
        AccountStatus : {type: DataTypes.STRING},
        AdDistribution : {type: DataTypes.STRING},
        AdRelevance : {type: DataTypes.STRING},
        Assists : {type: DataTypes.INTEGER},
        AverageCpc : {type: DataTypes.FLOAT},
        AverageCpp : {type: DataTypes.FLOAT},
        AveragePosition : {type: DataTypes.FLOAT},
        /*BidMatchType : {type: DataTypes.STRING},
        BudgetAssociationStatus : {type: DataTypes.STRING},
        BudgetName : {type: DataTypes.STRING},
        BudgetStatus : {type: DataTypes.STRING},*/
        CampaignLabels: {type: DataTypes.STRING},
        CampaignName : {type: DataTypes.STRING},
        CampaignStatus : {type: DataTypes.STRING},
        ClickCalls : {type: DataTypes.INTEGER},
        Clicks : {type: DataTypes.INTEGER},
        ConversionRate : {type: DataTypes.STRING},
        Conversions : {type: DataTypes.INTEGER},
        CostPerAssist : {type: DataTypes.FLOAT},
        CostPerConversion : {type: DataTypes.FLOAT},
        Ctr : {type: DataTypes.STRING},
        CurrencyCode : {type: DataTypes.STRING},
        CustomParameters: {type: DataTypes.STRING},
        DeliveredMatchType : {type: DataTypes.STRING},
        //DeviceOS : {type: DataTypes.STRING},
        DeviceType : {type: DataTypes.STRING},
        ExactMatchImpressionSharePercent : {type: DataTypes.STRING},
        ExpectedCtr : {type: DataTypes.INTEGER},
        HistoricalAdRelevance : {type: DataTypes.INTEGER},
        HistoricalExpectedCtr : {type: DataTypes.INTEGER},
        HistoricalLandingPageExperience : {type: DataTypes.INTEGER},
        HistoricalQualityScore : {type: DataTypes.INTEGER},
        ImpressionLostToAdRelevancePercent : {type: DataTypes.STRING},
        ImpressionLostToBidPercent : {type: DataTypes.STRING},
        ImpressionLostToBudgetPercent : {type: DataTypes.STRING},
        ImpressionLostToExpectedCtrPercent : {type: DataTypes.STRING},
        ImpressionLostToRankPercent : {type: DataTypes.STRING},
        Impressions : {type: DataTypes.INTEGER},
        ImpressionSharePercent : {type: DataTypes.STRING},
        LandingPageExperience : {type: DataTypes.STRING},
        LowQualityClicks : {type: DataTypes.INTEGER},
        LowQualityClicksPercent : {type: DataTypes.STRING},
        LowQualityConversionRate : {type: DataTypes.STRING},
        LowQualityConversions : {type: DataTypes.INTEGER},
        LowQualityGeneralClicks : {type: DataTypes.INTEGER},
        LowQualityImpressions : {type: DataTypes.INTEGER},
        LowQualityImpressionsPercent : {type: DataTypes.STRING},
        LowQualitySophisticatedClicks : {type: DataTypes.STRING},
        ManualCalls : {type: DataTypes.INTEGER},
        Network : {type: DataTypes.STRING},
        PhoneCalls : {type: DataTypes.INTEGER},
        PhoneImpressions : {type: DataTypes.INTEGER},
        Ptr : {type: DataTypes.STRING},
        QualityScore : {type: DataTypes.INTEGER},
        ReturnOnAdSpend : {type: DataTypes.FLOAT},
        Revenue : {type: DataTypes.STRING},
        RevenuePerAssist : {type: DataTypes.FLOAT},
        RevenuePerConversion : {type: DataTypes.FLOAT},
        Spend : {type: DataTypes.FLOAT},
        TimePeriod : {type: DataTypes.STRING},
        TopVsOther : {type: DataTypes.STRING},
        /*TrackingTemplate : {type: DataTypes.STRING}*/
    }, { freezeTableName: true });
    CampaignPerformanceReportRequest.associate = models => {}
    return CampaignPerformanceReportRequest;
};